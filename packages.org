#+title Packages
#+author Daan van Berkel
#+email dvanberkel@m-industries.com

Emacs 24 comes with a great [[http://ergoemacs.org/emacs/emacs_package_system.html][package manager]] that allows the easy
installation of packages.

* Require
We require the package in order to start using it.

#+begin_src emacs-lisp
(require 'package)
#+end_src

* Archives
There are various package archives that maintain lists of
software. Here we list the ones we want to use.

We are interested in =marmalade=
#+begin_src emacs-lisp
(add-to-list 'package-archives
  '("marmalade" . "http://marmalade-repo.org/packages/"))
#+end_src


=tromey=
#+begin_src emacs-lisp
  (add-to-list 'package-archives
      '("tromey" . "http://tromey.com/elpa/") t)
#+end_src

and also in =melpa=
#+begin_src emacs-lisp
(add-to-list 'package-archives
  '("melpa" . "http://melpa.milkbox.net/packages/"))
#+end_src

* Initialize
=package= needs to be initialized as well

#+begin_src emacs-lisp
(package-initialize)
#+end_src

* Content
Next we are going to install the ELPA archive description if needed.

#+begin_src emacs-lisp
  (when (not package-archive-contents)
      (package-refresh-contents))
#+end_src

* Packages to install
** Variable
We create a variable to contain all the packages we want to have
installed.

#+begin_src emacs-lisp
(defvar packages-to-install '())
#+end_src

** Wanted packages
Next we list all the packages we need.

#+begin_src emacs-lisp
(add-to-list 'packages-to-install 'auto-complete)
(add-to-list 'packages-to-install 'graphviz-dot-mode)
(add-to-list 'packages-to-install 'yasnippet)
(add-to-list 'packages-to-install 'elixir-mode)
(add-to-list 'packages-to-install 'haskell-mode)
(add-to-list 'packages-to-install 'go-mode)
(add-to-list 'packages-to-install 'markdown-mode)
(add-to-list 'packages-to-install 'htmlize)
(add-to-list 'packages-to-install 'solarized-theme)
(add-to-list 'packages-to-install 'editorconfig)
(add-to-list 'packages-to-install 'elm-mode)
#+end_src

*** Clojure

We are following the tutorial [[http://www.braveclojure.com/][Clojure for the Brave and True]]. It has a
few suggestions for a great packages that we copied.

#+begin_src emacs-list
(add-to-list 'packages-to-install 'paredit)
(add-to-list 'packages-to-install 'clojure-mode)
(add-to-list 'packages-to-install 'cider)
(add-to-list 'packages-to-install 'smex)
(add-to-list 'packages-to-install 'projectile)
(add-to-list 'packages-to-install 'rainbow-delimiters)
(add-to-list 'packages-to-install 'tagedit)
(add-to-list 'packages-to-install 'magit)
#+end_src

** OS Specifics

On OS X, an Emacs instance started from the graphical user
interface will have a different environment than a shell in a
terminal window, because OS X does not run a shell during the
login. Obviously this will lead to unexpected results when
calling external utilities like make from Emacs.
This library works around this problem by copying important
environment variables from the user's shell.

#+begin_src emacs-lisp
    (if (eq system-type 'darwin)
        (add-to-list 'packages-to-install 'auto-complete))
#+end_src
** Installation
At last we install all packages that aren't already installed.

#+begin_src emacs-lisp
(dolist (p packages-to-install)
  (when (not (package-installed-p p))
    (package-install p)))
#+end_src emacs-lisp

** Configuration

Some packages need configuration. We will load all files in the
=package-configuration= directory.

#+begin_src emacs-lisp
(setq config-dir (file-name-directory
		  (concat dotfiles-dir "package-configuration/")))
(mapc #'org-babel-load-file (directory-files config-dir t "\\.org$"))
#+end_src
